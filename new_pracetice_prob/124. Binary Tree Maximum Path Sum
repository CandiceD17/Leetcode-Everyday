# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    res = -10000
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        def maxSum(root):
            if root is None:
                return 0
            left_sum = maxSum(root.left)
            right_sum = maxSum(root.right)
            self.res = max(self.res, left_sum + right_sum + root.val)
            if root.left is not None:
                self.res = max(self.res, left_sum)
            if root.right is not None:
                self.res = max(self.res, right_sum)
            return max(root.val, root.val + left_sum, root.val + right_sum)
        
        root_max = maxSum(root)
        return max(self.res, root_max)
